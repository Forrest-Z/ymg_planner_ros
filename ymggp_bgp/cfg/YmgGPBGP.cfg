#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, int_t, double_t, bool_t

gen = ParameterGenerator()

gen.add("lethal_cost",  int_t,   0, "Lethal Cost",  253, 1, 255)
gen.add("neutral_cost", int_t,   0, "Neutral Cost",  50, 1, 255)
gen.add("cost_factor", double_t, 0, "Factor to multiply each cost from costmap by", 3.0, 0.01, 5.0)
gen.add("publish_potential", bool_t, 0, "Publish Potential Costmap", True)

orientation_enum = gen.enum([ 
    gen.const("None",        int_t, 0, "No orientations added except goal orientation"),
    gen.const("Forward",     int_t, 1, "Orientations point to the next point on the path"),
    gen.const("Interpolate", int_t, 2, "Orientations are a linear blend of start and goal pose"),
    gen.const("ForwardThenInterpolate", 
                             int_t, 3, "Forward orientation until last straightaway, then a linear blend until the goal pose"),
                            ], "How to set the orientation of each point")

gen.add("orientation_mode",  int_t, 0, "How to set the orientation of each point", 1, 0, 3,
        edit_method=orientation_enum)


gen.add("path_granularity",  double_t,   0, "Path Granularity",  0.05)
gen.add("stuck_timeout",  double_t,   0, "Stuck Timeout",  10.0)
gen.add("stuck_vel", double_t,   0, "Stuck Vel",  0.05)
gen.add("stuck_rot_vel", double_t,   0, "Stuck Vel",  -1.0)
gen.add("bgp_goal_dist", double_t, 0, "Distance to the bgp_goal", 5.0, 0.0)
gen.add("bgp_goal_max_cost", int_t, 0, "Maximum cost of the place where this planner put the bgp_goal", 50, 0, 255)
gen.add("recovery_dist", double_t, 0, "Recovery distance to bgp_goal", 2.0, 0.0)
gen.add("clear_plan_when_goal_reached", bool_t, 0, "Whether to clear plan when goal reached or not", True)


exit(gen.generate("ymggp_bgp", "ymggp_bgp", "YmgGPBGP"))
